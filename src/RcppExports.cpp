// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// distMat
NumericMatrix distMat(NumericMatrix x, NumericMatrix y, int power);
RcppExport SEXP mousetrap_distMat(SEXP xSEXP, SEXP ySEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type power(powerSEXP);
    rcpp_result_gen = Rcpp::wrap(distMat(x, y, power));
    return rcpp_result_gen;
END_RCPP
}
// distMatV
NumericMatrix distMatV(NumericMatrix x, NumericMatrix y, int power);
RcppExport SEXP mousetrap_distMatV(SEXP xSEXP, SEXP ySEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type power(powerSEXP);
    rcpp_result_gen = Rcpp::wrap(distMatV(x, y, power));
    return rcpp_result_gen;
END_RCPP
}
// distMat3d
NumericMatrix distMat3d(NumericMatrix x, NumericMatrix y, NumericMatrix z, int power);
RcppExport SEXP mousetrap_distMat3d(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type power(powerSEXP);
    rcpp_result_gen = Rcpp::wrap(distMat3d(x, y, z, power));
    return rcpp_result_gen;
END_RCPP
}
// distMat3dV
NumericMatrix distMat3dV(NumericMatrix x, NumericMatrix y, NumericMatrix z, int power);
RcppExport SEXP mousetrap_distMat3dV(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type power(powerSEXP);
    rcpp_result_gen = Rcpp::wrap(distMat3dV(x, y, z, power));
    return rcpp_result_gen;
END_RCPP
}
// getAngleP
NumericVector getAngleP(NumericVector x, NumericVector y);
RcppExport SEXP mousetrap_getAngleP(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(getAngleP(x, y));
    return rcpp_result_gen;
END_RCPP
}
// getAngleV
NumericVector getAngleV(NumericVector x, NumericVector y);
RcppExport SEXP mousetrap_getAngleV(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(getAngleV(x, y));
    return rcpp_result_gen;
END_RCPP
}
// getAnglesP
NumericMatrix getAnglesP(NumericMatrix xs, NumericMatrix ys);
RcppExport SEXP mousetrap_getAnglesP(SEXP xsSEXP, SEXP ysSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    rcpp_result_gen = Rcpp::wrap(getAnglesP(xs, ys));
    return rcpp_result_gen;
END_RCPP
}
// getAnglesV
NumericMatrix getAnglesV(NumericMatrix xs, NumericMatrix ys);
RcppExport SEXP mousetrap_getAnglesV(SEXP xsSEXP, SEXP ysSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ys(ysSEXP);
    rcpp_result_gen = Rcpp::wrap(getAnglesV(xs, ys));
    return rcpp_result_gen;
END_RCPP
}
