% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import.R
\name{mt_import_long}
\alias{mt_import_long}
\title{Import mouse-tracking data saved in long format.}
\usage{
mt_import_long(raw_data, mt_labels = mt_variable_labels,
  mt_id_label = mt_id, mt_seq_label = "mt_seq", reset_timestamps = TRUE)
}
\arguments{
\item{raw_data}{a data.frame in long format, containing the raw data.}

\item{mt_labels}{a named character vector. Its values specify the columns in 
the data.frame containing the mouse-tracking variables (if a value is not 
found in the data.frame, the variable is dropped). Its names correspond to 
the names that should be given to the respective dimensions in the 
trajectory array. These names should correspond to the names in
\link{mt_variable_labels}.}

\item{mt_id_label}{a character string specifying the column that provides a
unique ID for every trial.}

\item{mt_seq_label}{a character string specifying the column that indicactes 
the order of the logged coordinates within a trial. If no column of the
specified name is found in the data.frame, the coordinates will be imported
in the order they were stored in \code{raw_data}.}

\item{reset_timestamps}{logical indicating if the first timestamp should be 
subtracted from all timestamps within a trial. Default is \code{TRUE} as it
is recommended for all following analyses in mousetrap.}
}
\value{
A mousetrap data object (see \link{mt_example}).
}
\description{
\code{mt_import_long} receives a data.frame in which mouse-tracking data are
stored in long format, i.e., where one row contains the logging data
(timestamp, x- and y-position etc.) at one specific point in the trial. This
is, for example, the case when exporting the trajectory data from the
mousetrap package using \link{mt_reshape}. From this data.frame,
\code{mt_import_long} creates a mousetrap data object containing the
trajectories and additional data for further processing within the mousetrap
package. \code{mt_import_long} returns a list, which includes the trajectory
data as an array, and all other data as a data.frame. This data structure can
then be passed on to other functions within this package, such as
\link{mt_time_normalize} or \link{mt_calculate_measures}. The defaults are
set so that no adjustments have to be made when importing a data.frame that
was created using \link{mt_reshape}.
}
\details{
The coordinates are ordered according to the values in the column provided in
the \code{mt_seq_label} parameter (\code{mt_seq} by default). If the 
corresponding column does not exist, the coordinates will be imported in the
order they were stored in the raw_data.
}
\examples{
# Export data using mt_reshape
exp_data <- mt_reshape(mt_example, use2_variables="Condition")
# Import the exported data again using mt_import_long
mt_data <- mt_import_long(exp_data)

\dontrun{
# Import a hypothetical dataset that contains the custom variable "ANGLE"
# which should receive the name "angle" in the trajectory array
mt_data <- mt_import_long(exp_data,
  mt_labels= c(timestamps="timestamps", xpos="xpos", ypos="ypos", angle="ANGLE"))
}
}
\seealso{
\link{mt_import_mousetrap} and \link{mt_import_wide} for importing 
  mouse-tracking data in other formats.
}

