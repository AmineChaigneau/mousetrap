% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatmap.R
\name{mt_heatmap_raw}
\alias{mt_heatmap_raw}
\title{Creates high-resolution heatmap of trajectory data.}
\usage{
mt_heatmap_raw(data, use = "trajectories", dimensions = c("xpos", "ypos"),
  bounds = NULL, xres = 1000, upsample = 1, norm = FALSE,
  smooth_radius = 1.5, low_pass = 200, auto_enhance = TRUE,
  mean_image = 0.2, mean_color = 0.2, colors = c("black", "blue",
  "white"), n_shades = c(1000, 10), aggregate_lwd = 0,
  aggregate_col = "black", n_trajectories = 10000, seed = 1,
  verbose = TRUE)
}
\arguments{
\item{data}{a mousetrap data object created using one of the mt_import
functions (see \link{mt_example} for details). Alternatively, a trajectory
array can be provided directly (in this case \code{use} will be ignored).}

\item{use}{a character string specifying which trajectory data should be
used.}

\item{dimensions}{a character vector specifying the trajectory variables used
to create the heatmap. The first two entries are used as x and 
y-coordinates, the third, if provided, will be added as color information.}

\item{bounds}{numeric vector specifying the corners (xmin, ymin, xmax, ymax)
of the plot region. For the default \code{bounds = NULL} bounds are
determined based on the data input.}

\item{xres}{an integer specifying the number of pixels along the x-dimension.
An xres of 1000 implies an 1000xN px, where N is determined so that the
trajectories aspect ratio is preserved (provided the \code{bounds} are
unchanged).}

\item{upsample}{a numeric by which the number of points used to represent
individual trajectories are increased or decreased. Values of smaller than
one will improve speed but also introduce a certain level of granularity.}

\item{norm}{a logical specifying whether the data should be warped into
standard space. Norm = TRUE overrules bounds.}

\item{smooth_radius}{a numeric specifying the standard deviation of the
gaussian smoothing. If zero, smoothing is omitted.}

\item{low_pass}{an integer specifying allowed number of counts per pixel.
This arguments limits the maximum pixel color intensity.}

\item{mean_image}{a numeric between 0 and 1 specifying the average color
intensity across the entire image. Defaults to .1.}

\item{mean_color}{a numeric between 0 and 1 specifying the average color
intensity across the entire image. Defaults to .1.}

\item{colors}{a character vector specifying two or three colors used to 
color the background, the foreground (trajectories), and the values of 
a third dimension if specified.}

\item{n_trajectories}{an integer specifying the number of trajectories used
to create the image. If \code{n_trajectories} is smaller than containes in
the trajectorie object specified by \code{use} the \code{n_trajectories}
are randomly sampled.}

\item{seed}{an integer specifying the seed used for the trajectory sampling.}

\item{verbose}{boolean specifying whether progress updates should printed.}
}
\value{
Nothing, when image is plotted using an external device. Otherwise an
  object of class \code{mt_object_raw} containing in a matrix format the
  image's pixel information.
}
\description{
\code{mt_heatmap_raw} creates a high-resolution heatmap image of the
trajectory data using gaussian smoothing.
}
\details{
To create the image, \code{mt_heatmap_raw} takes the following steps. First,
the function maps the trajectory points to a pixel space with x ranging from
1 and xres and y ranging from 1 to xres divided by the ratio of x and y's
value range. Second, the function counts and normalizes the number of
trajectory points occupying each of the x,y-pixels to yield image intensities
between 0 and 1. Third, the function smooths the image using an approximative
guassian approach governed by smooth_radius, which controls the dispersion of
the gaussian smoothing. Fourth, the function automatically enhances the image
(unless otherwise specified) using non-linear transformation in order to
yield a desired \code{mean_image} intensity. Fourth, the function translates
image intensity into color using the colors specified in \code{colors}.
Finally, the function the function returns the image in a long format
containing the x, y, and color information.

\code{mt_heatmap_raw} also offers the possibilty to overlay the heatmap with
an additional variable, such as for instance velocity, so that both the
density of mouse trajectories and the informatio of the additional variable
are visible. In order to do this specify a third variable label in
\code{dimensions} and control its appearance using the \code{color} and
\code{mean_color} arguments.
}
\examples{
# Plot regular heatmap
#SpiveyEtAl2005 = mt_import_long(SpiveyEtAl2005_raw,'x','y',NULL,'t',
#mt_id_label = c('ptp','trial'))
#heatmap = mt_heatmap_raw(SpiveyEtAl2005,xres = 2000)
#mt_heatmap(heatmap,filename = NULL)

# compute measures
#SpiveyEtAl2005 = mt_measures(SpiveyEtAl2005)

# Plot heatmap using velocity
#mt_heatmap(SpiveyEtAl2005)

}
\author{
Dirk U. Wulff (\email{dirk.wulff@gmail.com})
}
